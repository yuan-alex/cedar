/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestingRouteImport } from './routes/testing'
import { Route as ChatsRouteImport } from './routes/chats'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatThreadTokenRouteImport } from './routes/chat.$threadToken'
import { Route as AuthAuthViewRouteImport } from './routes/auth.$authView'
import { Route as AccountAccountViewRouteImport } from './routes/account.$accountView'

const TestingRoute = TestingRouteImport.update({
  id: '/testing',
  path: '/testing',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsRoute = ChatsRouteImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatThreadTokenRoute = ChatThreadTokenRouteImport.update({
  id: '/chat/$threadToken',
  path: '/chat/$threadToken',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthViewRoute = AuthAuthViewRouteImport.update({
  id: '/auth/$authView',
  path: '/auth/$authView',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountAccountViewRoute = AccountAccountViewRouteImport.update({
  id: '/account/$accountView',
  path: '/account/$accountView',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/chats': typeof ChatsRoute
  '/testing': typeof TestingRoute
  '/account/$accountView': typeof AccountAccountViewRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/chat/$threadToken': typeof ChatThreadTokenRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/chats': typeof ChatsRoute
  '/testing': typeof TestingRoute
  '/account/$accountView': typeof AccountAccountViewRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/chat/$threadToken': typeof ChatThreadTokenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/chats': typeof ChatsRoute
  '/testing': typeof TestingRoute
  '/account/$accountView': typeof AccountAccountViewRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/chat/$threadToken': typeof ChatThreadTokenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/chats'
    | '/testing'
    | '/account/$accountView'
    | '/auth/$authView'
    | '/chat/$threadToken'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/chats'
    | '/testing'
    | '/account/$accountView'
    | '/auth/$authView'
    | '/chat/$threadToken'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/chats'
    | '/testing'
    | '/account/$accountView'
    | '/auth/$authView'
    | '/chat/$threadToken'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  ChatsRoute: typeof ChatsRoute
  TestingRoute: typeof TestingRoute
  AccountAccountViewRoute: typeof AccountAccountViewRoute
  AuthAuthViewRoute: typeof AuthAuthViewRoute
  ChatThreadTokenRoute: typeof ChatThreadTokenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/testing': {
      id: '/testing'
      path: '/testing'
      fullPath: '/testing'
      preLoaderRoute: typeof TestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats': {
      id: '/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/$threadToken': {
      id: '/chat/$threadToken'
      path: '/chat/$threadToken'
      fullPath: '/chat/$threadToken'
      preLoaderRoute: typeof ChatThreadTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/$authView': {
      id: '/auth/$authView'
      path: '/auth/$authView'
      fullPath: '/auth/$authView'
      preLoaderRoute: typeof AuthAuthViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/$accountView': {
      id: '/account/$accountView'
      path: '/account/$accountView'
      fullPath: '/account/$accountView'
      preLoaderRoute: typeof AccountAccountViewRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  ChatsRoute: ChatsRoute,
  TestingRoute: TestingRoute,
  AccountAccountViewRoute: AccountAccountViewRoute,
  AuthAuthViewRoute: AuthAuthViewRoute,
  ChatThreadTokenRoute: ChatThreadTokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
